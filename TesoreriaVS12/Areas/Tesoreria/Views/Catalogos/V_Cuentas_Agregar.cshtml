@model TesoreriaVS12.Areas.Tesoreria.Models.Ca_CuentasModel

@{
    Layout = null;
}

@if( ViewBag.Agregar == true)
{
    <div data-title="Agregar Cuenta" class="TituloModal"></div>
    @Html.Hidden("Agregar")
}
else
{
    <div data-title="Editar Cuenta" class="TituloModal"></div>
    @Html.Hidden("Editar")
}
@using (Html.BeginForm("", "", FormMethod.Post, new { id = "frmCta" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    
    <div class="row">
        <div class="col-sm-10">
            <label>Cuenta</label>
            @Html.ValidationMessageFor(model => model.Genero)
            @Html.ValidationMessageFor(model => model.Grupo)
            @Html.ValidationMessageFor(model => model.Rubro)
            @Html.ValidationMessageFor(model => model.Cuenta)
            @Html.ValidationMessageFor(model => model.SubCuentaO1)
            @Html.ValidationMessageFor(model => model.SubCuentaO2)
            @Html.ValidationMessageFor(model => model.SubCuentaO3)
            @Html.ValidationMessageFor(model => model.SubCuentaO4)
        </div>
        <div class="col-sm-2">
            @Html.LabelFor(model => model.Nivel)
            @Html.ValidationMessageFor(model => model.Nivel)
        </div>
    </div>
    <div class="row">
        <div class="col-sm-1">
            <div class="editor-field">
                @Html.TextBoxFor(model => model.Genero, new { @readonly = "true" })
            </div>
        </div>

        <div class="col-sm-1">
            <div class="editor-field">
                @Html.TextBoxFor(model => model.Grupo, new { @readonly = "true" })
            </div>
        </div>

        <div class="col-sm-1">
            <div class="editor-field">
                @Html.TextBoxFor(model => model.Rubro, new { @readonly = "true" })
            </div>
        </div>

        <div class="col-sm-1">
            <div class="editor-field">
                @Html.TextBoxFor(model => model.Cuenta, new { @readonly = "true" })
            </div>
        </div>

        <div class="col-sm-1">
            <div class="editor-field">
                @Html.TextBoxFor(model => model.SubCuentaO1, new { @readonly = "true" })
            </div>
        </div>

        <div class="col-sm-1">
            <div class="editor-field">
                @Html.TextBoxFor(model => model.SubCuentaO2, new { @readonly = "true" })
            </div>
        </div>

        <div class="col-sm-1">
            <div class="editor-field">
                @Html.TextBoxFor(model => model.SubCuentaO3, new { @readonly = "true" })
            </div>
        </div>

        <div class="col-sm-1">
            <div class="editor-field">
                @Html.TextBoxFor(model => model.SubCuentaO4, new { @readonly = "true" })
            </div>
        </div>
        <div class="col-sm-2">
        </div>
        <div class="col-sm-2">
            @Html.EditorFor(model => model.Nivel)
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <div class="editor-label">
                @Html.LabelFor(model => model.Descripcion)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.Descripcion, new { @class="notMayus"})
                @Html.ValidationMessageFor(model => model.Descripcion)
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <div class="editor-label">
                @Html.LabelFor(model => model.Observaciones)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Observaciones)
                @Html.ValidationMessageFor(model => model.Observaciones)
            </div>
        </div>
    </div>
        
}

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js" class="jsValidate"></script>
<script>
    $(document).ready(function () {
        $("#frm input,texarea,select").addClass("form-control");
        $("#MyModal1 .js_btnOk").off("click");
        $("#MyModal1 .js_btnOk").on("click", function () {
            if ($("#frmCta").valid()) {
                if($("#Agregar").length)
                    ajaxJson("@Url.Action("V_Cuentas_Agregar","Catalogos")", $("#frmCta").serialize(), "post", false, callbackGuardar)
                else
                    ajaxJson("@Url.Action("V_Cuentas_Editar","Catalogos")", $("#frmCta").serialize(), "post", false, callbackeditar)
            }
        });
    });

    function callbackGuardar(response)
    {
        if (response.Exito == false)
            ErrorCustom(response.Mensaje, "");
        else {
            ExitoCustom("", function () { closeModal({ Modal: "MyModal1" }) }) ;
            var Acciones = _.template($('#jsActionsource').html());
            response.Registro.Acciones = Acciones({
                Id_Cuenta: response.Registro.Id_Cuenta,
                BtnAgregar: response.Registro.BtnAgregar,
                BtnDetalles: response.Registro.BtnDetalles,
                BtnEditar: response.Registro.BtnEditar,
                BtnEliminar: response.Registro.BtnEliminar
            });
            AddTbl(response.Registro, "tbl");
        }
    }

    function callbackeditar(response) {
        if (response.Exito == false)
            ErrorCustom(response.Mensaje, "");
        else {
            ExitoCustom("", function () { closeModal({ Modal: "MyModal1" }) });
            var Acciones = _.template($('#jsActionsource').html());
            response.Registro.Acciones = Acciones({
                Id_Cuenta: response.Registro.Id_Cuenta,
                BtnAgregar: response.Registro.BtnAgregar,
                BtnDetalles: response.Registro.BtnDetalles,
                BtnEditar: response.Registro.BtnEditar,
                BtnEliminar: response.Registro.BtnEliminar
            });
            UpdateTbl(response.Registro, "tbl", aPos);
        }
    }
</script>    
    

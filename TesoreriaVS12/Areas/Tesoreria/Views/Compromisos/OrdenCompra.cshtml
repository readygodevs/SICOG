@model TesoreriaVS12.Areas.Tesoreria.Models.Ma_CompromisosModel

@{
    ViewBag.Title = "OrdenCompra";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section sin_contenedor{
    <link href="~/Content/datepicker3.css" rel="stylesheet" />

    <div id="_menu_lateral">
        @{
            Html.RenderAction("Botonera", "Home", new { Area = "", ids = Model.Botonera });
    //if(Model.regresoDetalle){
    //    Html.RenderAction("Botonera", "Home", new { Area = "", ids = new List<object> { "bNuevo", "bEditar", "bCancelar", "bBuscar", "bDetalles", "bRecibido", "bSalir" } });
    //}
    //else if(Model.Botonera != null){

    //}
    //else{
    //    Html.RenderAction("Botonera", "Home", new { Area = "", ids = new List<object> { "bNuevo", "bBuscar", "bSalir" } });
    //}
        }
    </div>

    @using (Html.BeginForm("OrdenCompraGuardar", "Compromisos", FormMethod.Post, new { id = "frmOrdenCompra" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <div class="container">
            <h2>Compromiso</h2>
            <div class="row">
                <div id="Adquisicion" class="col-xs-4 pull-right text-right" style="color: green; font-size: 20px;">
                    @if (Model.Adquisicion.Value)
                    {
                        <label>Procede de Adquisiciones</label>
                    }
                </div>
            </div>
            <div class="row">
                <div class="col-xs-3">
                    @Html.LabelFor(model => model.Id_TipoCompromiso)
                    @Html.HiddenFor(model => model.Adquisicion)
                    @Html.DropDownListFor(model => model.Id_TipoCompromiso, Model.ListaId_TipoCompromiso, "--Seleccione una opción--")
                    @Html.ValidationMessageFor(model => model.Id_TipoCompromiso)
                </div>

                <div class="col-xs-2">
                    @Html.LabelFor(model => model.Id_FolioCompromiso)
                    @Html.TextBoxFor(model => model.Id_FolioCompromiso, new { @class = "NonEditable folio" })
                    @Html.ValidationMessageFor(model => model.Id_FolioCompromiso)
                </div>

                <div class="col-xs-2">
                    @Html.LabelFor(model => model.Fecha_Orden)
                    <div class="input-group fecha_group">
                        @Html.TextBox("Fecha_Orden", Model.Fecha_Orden.HasValue ? Model.Fecha_Orden.Value.ToShortDateString() : "", new { @class = "date" })
                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                    </div>
                    @Html.ValidationMessageFor(model => model.Fecha_Orden)
                </div>

                <div class="col-xs-2 pull-right text-right">
                    @Html.LabelFor(model => model.Estatus)
                    @Html.HiddenFor(model => model.Estatus)
                    @Html.TextBoxFor(model => model.Descripcion_Estatus, new { @class = "txt-estatus pull-right NonEditable" })
                </div>

            </div>

            <div class="row">
                <div class="col-xs-3">
                    @Html.LabelFor(model => model.PagarseEn)
                    @Html.TextBoxFor(model => model.PagarseEn, new { @class = "NonEditable" })
                    @Html.ValidationMessageFor(model => model.PagarseEn)
                </div>
                <div class="col-xs-2">
                    @Html.LabelFor(model => model.No_Requisicion)
                    @Html.TextBoxFor(model => model.No_Requisicion, new { @class = "orden" })
                    @Html.ValidationMessageFor(model => model.No_Requisicion)
                </div>

                <div class="col-xs-2">
                    @Html.LabelFor(model => model.Fecha_Requisicion)
                    <div class="input-group fecha_group">
                        @Html.TextBox("Fecha_Requisicion", Model.Fecha_Requisicion.HasValue ? Model.Fecha_Requisicion.Value.ToShortDateString() : "", new { @class = "date" })
                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                    </div>
                    @Html.ValidationMessageFor(model => model.Fecha_Requisicion)
                </div>
                <div class="col-xs-2">
                    @Html.LabelFor(model => model.No_Adquisicion)
                    @Html.TextBoxFor(model => model.No_Adquisicion, new { @class="orden"})
                    @Html.ValidationMessageFor(model => model.No_Adquisicion)
                </div>
                <div class="col-xs-3">
                    @Html.LabelFor(model => model.Fecha_Adquisicion)
                    <div class="input-group fecha_group">
                        @Html.TextBox("Fecha_Adquisicion", Model.Fecha.HasValue ? Model.Fecha.Value.ToShortDateString() : "", new { @class= "date" })
                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                    </div>
                    @Html.ValidationMessageFor(model => model.Fecha_Adquisicion)
                </div>
            </div>

            <div class="row">

                <div class="col-xs-5">
                    <label>Beneficiario</label>
                    <div class="div_inline">
                        <div class="input-group proveedor-group pull-left">
                            @Html.TextBoxFor(model => model.Id_Beneficiario)
                            <span id="ModalBusBeneficiario" class="input-group-addon js_Beneficiario"><i class="fa fa-search"></i></span>
                        </div>
                        &nbsp;
                        @Html.TextBoxFor(model => model.Ca_Beneficiarios.NombreCompleto, new { @class = "NonEditable centro-gestor-desc" })
                        @Html.ValidationMessageFor(model => model.Id_Beneficiario)
                    </div>
                </div>

                <div class="col-xs-4">
                    @Html.LabelFor(model => model.Id_ClasificaBeneficiario)
                    @Html.DropDownListFor(model => model.Id_ClasificaBeneficiario, Model.ListaId_ClasificaBeneficiario)
                    @Html.ValidationMessageFor(model => model.Id_ClasificaBeneficiario)
                </div>
                <div class="col-xs-3">
                    @Html.LabelFor(model => model.Usuario_Orden)
                    @Html.TextBoxFor(model => model.Usuario_Orden, new { @class = "NonEditable" })
                    @Html.ValidationMessageFor(model => model.Usuario_Orden)
                </div>
            </div>

            @*<div class="row">
                    <div class="col-xs-6">
                        @Html.LabelFor(model => model.Id_Area_Solicitud)
                        <div class="div_inline">
                            <div class="input-group centro-gestor pull-left">
                                @Html.TextBoxFor(model => model.Id_Area_Solicitud, new { @class = "js_CentroGestorFO", data_iddesc = "Area_Solicitud" })
                                <span id="ModalBusCG" class="input-group-addon js_BuscarCentroGestor"><i class="fa fa-search"></i></span>
                            </div>
                            &nbsp;
                            @Html.TextBox("Area_Solicitud", Model.Ca_Areas_Solicitud != null ? Model.Ca_Areas_Solicitud.Descripcion : "", new { @class = "NonEditable centro-gestor-desc" })
                            @Html.ValidationMessageFor(model => model.Id_Area_Solicitud)
                        </div>
                    </div>

                    <div class="col-xs-6">
                        @Html.LabelFor(model => model.Id_Area_Entrega)
                        <div class="div_inline">
                            <div class="input-group centro-gestor pull-left">
                                @Html.TextBoxFor(model => model.Id_Area_Entrega, new { @class = "js_CentroGestorFO", data_iddesc = "Area_Entrega" })
                                <span id="ModalBusCGR" class="input-group-addon js_BuscarCentroGestor"><i class="fa fa-search"></i></span>
                            </div>
                            &nbsp;
                            @Html.TextBox("Area_Entrega", Model.Ca_Areas_Entrega != null ? Model.Ca_Areas_Entrega.Descripcion : "", new { @class = "NonEditable centro-gestor-desc" })
                            @Html.ValidationMessageFor(model => model.Id_Area_Entrega)
                        </div>
                    </div>
                </div>*@

            <div class="row">
                <div class="col-xs-12">
                    @Html.LabelFor(model => model.Observaciones)
                    @Html.TextAreaFor(model => model.Observaciones, new { @class = "observaciones_orden" })
                    @Html.ValidationMessageFor(model => model.Observaciones)
                </div>
            </div>
        </div>
        <br />
        <div class="separador_dos">
            <div class="container">
                <div class="row">
                    <div class="col-xs-6">
                        <div class="div_inline_block">
                            @Html.LabelFor(model => model.Fecha_Cancela)
                            <div class="input-group fecha_group">
                                @Html.TextBox("Fecha_Cancela", Model.Fecha_Cancela.HasValue ? Model.Fecha_Cancela.Value.ToShortDateString() : "", new { @class = "NonEditable" })
                                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                            </div>
                            @Html.ValidationMessageFor(model => model.Fecha_Cancela)
                        </div>
                        &nbsp;&nbsp;&nbsp;
                        <div class="div_inline_block">
                            @Html.LabelFor(model => model.Usuario_Cancela)
                            @Html.TextBoxFor(model => model.Usuario_Cancela, new { @class = "usuario_recibe NonEditable" })
                            @Html.ValidationMessageFor(model => model.Usuario_Cancela)
                        </div>
                    </div>

                    <div class="col-xs-6">
                        <div class="div_inline_block">
                            @Html.LabelFor(model => model.Fecha_Autorizo)
                            <div class="input-group fecha_group">
                                @Html.TextBox("Fecha_Autorizo", Model.Fecha_Autorizo.HasValue ? Model.Fecha_Autorizo.Value.ToShortDateString() : "", new { @class = "NonEditable" })
                                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                            </div>
                            @Html.ValidationMessageFor(model => model.Fecha_Autorizo)
                        </div>
                        &nbsp;&nbsp;&nbsp;
                        <div class="div_inline_block">
                            @Html.LabelFor(model => model.Usuario_Autorizo)
                            @Html.TextBoxFor(model => model.Usuario_Autorizo, new { @class = "usuario_recibe NonEditable" })
                            @Html.ValidationMessageFor(model => model.Usuario_Autorizo)
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-xs-8">
                        <div class="div_inline_block">
                            <label for="Fecha_Devengado">Fecha de Recibido</label>
                            <div class="input-group fecha_group">
                                @Html.TextBox("Fecha_Devengado", Model.Fecha_Devengado.HasValue ? Model.Fecha_Devengado.Value.ToShortDateString() : "", new { @class = "date NonEditable" })
                                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                            </div>
                            @Html.ValidationMessageFor(model => model.Fecha_Devengado)
                        </div>
                        @*<div class="div_inline_block">
                                @Html.LabelFor(model => model.Fecha_Recibe_Area)
                                <div class="input-group fecha_group">
                                    @Html.TextBox("Fecha_Recibe_Area", Model.Fecha_Recibe_Area.HasValue ? Model.Fecha_Recibe_Area.Value.ToShortDateString() : "")
                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                </div>
                                @Html.ValidationMessageFor(model => model.Fecha_Recibe_Area)
                            </div>*@
                        &nbsp;
                        <div class="div_inline_block">
                            <label for="Usuario_Recibe_Area">Usuario que Recibe</label>
                            @Html.TextBoxFor(model => model.Usuario_Recibe_Area, new { @class = "usuario_recibe NonEditable" })
                            @Html.ValidationMessageFor(model => model.Usuario_Recibe_Area)
                        </div>
                    </div>
                    <div class="col-xs-3">
                        <div class="">
                            @Html.LabelFor(model => model.Id_FolioCR)
                        </div>
                        <div class="div_tipo_cr">
                            @Html.TextBoxFor(model => model.Id_FolioCR, new { @class = "folio NonEditable" })
                            @Html.HiddenFor(model => model.Id_TipoCR)
                            @Html.ValidationMessageFor(model => model.Id_TipoCR)
                            @Html.ValidationMessageFor(model => model.Id_FolioCR)
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-xs-12">
                        @Html.LabelFor(model => model.Observa_Recibio)
                        @Html.TextAreaFor(model => model.Observa_Recibio, new { @class = "observaciones_orden NonEditable" })
                        @Html.ValidationMessageFor(model => model.Observa_Recibio)
                    </div>
                </div>

                <div class="row">
                    <div class="col-xs-4">
                        @Html.LabelFor(model => model.Id_MesPO_Comprometido)
                        @Html.HiddenFor(model => model.Id_MesPO_Comprometido)
                        @Html.ValidationMessageFor(model => model.Id_MesPO_Comprometido)
                        <div class="input-group folio_mes">
                            @Html.HiddenFor(model => model.Id_FolioPO_Comprometido)
                            @Html.TextBoxFor(model => model.Poliza_Comprometido, new { @class = "NonEditable" })
                            <span class="input-group-addon js_ConsultaPoliza" data-tipo="4"><i class="fa fa-search"></i></span>
                        </div>
                        @Html.ValidationMessageFor(model => model.Id_FolioPO_Comprometido)
                    </div>

                    <div class="col-xs-4">
                        @Html.LabelFor(model => model.Id_MesPO_Devengado)
                        @Html.HiddenFor(model => model.Id_MesPO_Devengado)
                        @Html.ValidationMessageFor(model => model.Id_MesPO_Devengado)
                        <div class="input-group folio_mes">
                            @Html.HiddenFor(model => model.Id_FolioPO_Devengado)
                            @Html.TextBoxFor(model => model.Poliza_Devengado, new { @class = "NonEditable" })
                            <span class="input-group-addon js_ConsultaPoliza" data-tipo="4"><i class="fa fa-search"></i></span>
                        </div>
                        @Html.ValidationMessageFor(model => model.Id_FolioPO_Devengado)
                    </div>
                    <!--Fincamiento cambiar-->
                    <div class="col-xs-4">
                        @Html.LabelFor(model => model.Id_MesPoliza)
                        @Html.HiddenFor(model => model.Id_MesPoliza)
                        @Html.ValidationMessageFor(model => model.Id_MesPoliza)
                        <div class="input-group folio_mes">
                            @Html.HiddenFor(model => model.Id_FolioPoliza)
                            @Html.TextBoxFor(model => model.Poliza_Fincamiento, new { @class = "NonEditable" })
                            <span class="input-group-addon js_ConsultaPoliza" data-tipo="3"><i class="fa fa-search"></i></span>
                        </div>
                        @Html.ValidationMessageFor(model => model.Id_FolioPoliza)
                    </div>
                </div>

                <div class="row">
                    <div class="col-xs-4">
                        @Html.LabelFor(model => model.Id_MesPO_Comprometido_C)
                        @Html.HiddenFor(model => model.Id_MesPO_Comprometido_C)
                        @Html.ValidationMessageFor(model => model.Id_MesPO_Comprometido_C)
                        <div class="input-group folio_mes">
                            @Html.HiddenFor(model => model.Id_FolioPO_Comprometido_C)
                            @Html.TextBoxFor(model => model.Poliza_Comprometido_C, new { @class = "NonEditable" })
                            <span class="input-group-addon js_ConsultaPoliza" data-tipo="4"><i class="fa fa-search"></i></span>
                        </div>
                        @Html.ValidationMessageFor(model => model.Id_FolioPO_Comprometido_C)
                    </div>

                    <div class="col-xs-4">
                        @Html.LabelFor(model => model.Id_MesPO_Devengado_C)
                        @Html.HiddenFor(model => model.Id_MesPO_Devengado_C)
                        @Html.ValidationMessageFor(model => model.Id_MesPO_Devengado_C)
                        <div class="input-group folio_mes">
                            @Html.HiddenFor(model => model.Id_FolioPO_Devengado_C)
                            @Html.TextBoxFor(model => model.Poliza_Devengado_C, new { @class = "NonEditable" })
                            <span class="input-group-addon js_ConsultaPoliza" data-tipo="4"><i class="fa fa-search"></i></span>
                        </div>
                        @Html.ValidationMessageFor(model => model.Id_FolioPO_Devengado_C)
                    </div>

                    <div class="col-xs-4">
                        @Html.LabelFor(model => model.Id_MesPoliza_C)
                        @Html.HiddenFor(model => model.Id_MesPoliza_C)
                        @Html.ValidationMessageFor(model => model.Id_MesPoliza_C)
                        <div class="input-group folio_mes">
                            @Html.HiddenFor(model => model.Id_FolioPoliza_C)
                            @Html.TextBoxFor(model => model.Poliza_Fincamiento_C, new { @class = "NonEditable" })
                            <span class="input-group-addon js_ConsultaPoliza" data-tipo="3"><i class="fa fa-search"></i></span>
                        </div>
                        @Html.ValidationMessageFor(model => model.Id_FolioPoliza_C)
                    </div>
                </div>
            </div>
        </div>

    }

    @using (Html.BeginForm("DetalleCompromiso", "Compromisos", FormMethod.Post, new { id = "frmDetalles" }))
    {
        @Html.Hidden("TipoCompromiso", Model.Id_TipoCompromiso)
        @Html.Hidden("FolioCompromiso", Model.Id_FolioCompromiso)
        @Html.Hidden("args", Model.argsReturn)
    }
    @if (Model.Regreso != null)
    {
        using (Html.BeginForm(Model.Regreso.Accion, Model.Regreso.Controlador, FormMethod.Post, new { id = "frmRegresoMaestro" }))
        {
            foreach (var item in Model.Regreso.Parametros)
            {
                @Html.Hidden(item.Id, item.Valor);
            }
        }
    }
}

@section Scripts{

    <script src="~/Scripts/bootstrap-datepicker.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/bootstrap3-typeahead.min.js"></script>
    <script src="~/Areas/Tesoreria/Scripts/Beneficiarios.js"></script>
    <script src="~/Areas/Tesoreria/Scripts/Busquedas.js"></script>
    <script src="~/Areas/Tesoreria/Scripts/Compromisos.js"></script>
    <script src="~/Areas/Tesoreria/Scripts/ConsultaPoliza.js"></script>
<script src="~/Areas/Tesoreria/Scripts/underscore.js"></script>

<script src="~/Areas/Tesoreria/Scripts/Busqueda.js"></script>



    <script>
        var ligaContrarecibos = "@Url.Action("Index", "Contrarecibos",new { area = "Tesoreria" })";
        var ligaArrendamientos = "@Url.Action("Arrendamientos", "Contrarecibos", new { area = "Tesoreria" })";
        var ligaHonorarios= "@Url.Action("Honorarios", "Contrarecibos", new { area = "Tesoreria" })";
        var ligaCancelacionActivos = "@Url.Action("CancelacionActivos", "Contrarecibos", new { area = "Tesoreria" })";
        var ligaHonorariosAsimilables = "@Url.Action("HonorariosAsimilables", "Contrarecibos", new { area = "Tesoreria" })";

        //var construirCampo = function (Campo, Url) {
        //    $('#' + Campo).typeahead({
        //        source: function (query, process) {
        //            buscar(query, process, Campo, Url);
        //        },
        //        autoSelect: true,
        //        minLength: 0, items: 15
        //    });
        //}
        //var change = function (Campo) {
        //    //debugger;
        //    $("body").on("change", "#" + Campo, function () {
        //        if ($("#" + Campo).val().split('-').length != 1) {
        //            $("#" + Campo).parent().parent().parent().siblings().find(".js_Descripcion").val($("#" + Campo).val().split('-')[1]);
        //            $("#" + Campo).val($("#" + Campo).val().split('-')[0]);
        //            $("#" + Campo).parent().parent().parent().siblings().find(".js_Descripcion").focus();
        //        } else if ($.inArray($("#" + Campo).val(), $("#" + Campo).data("datasource")) == -1) {
        //            $("#" + Campo).val("");
        //            $("#" + Campo).parent().parent().parent().siblings().find(".js_Descripcion").val("");
        //        }
        //        $("#" + Campo).next;
        //    });
        //}

        //var focusOut = function (Campo) {
        //    $("body").on("focusout", "#" + Campo, function () {
        //        var clave = $(this).val().trim();
        //        if (clave.length == 0) {
        //            $("#" + Campo).parent().parent().parent().siblings().find(".js_Descripcion").val("");
        //        }
        //    });
        //}

        //var buscar = _.debounce(function (query, process, Campo, Url) {
        //    ajaxJson(Url, { descripcion: $("#" + Campo).val() }, "POST", true, function (results) {
        //        $("#" + Campo).data("datasource", results.Ids);
        //        return process(results.Data);
        //    });
        //}, 300);
        $(document).ready(function () {
            $("#frmOrdenCompra input,textarea,select").addClass("form-control");
            disableInputs();
            $(".input-group .date").datepicker({
                format: 'dd/mm/yyyy',
                autoclose: true,
                todayHighlight: true
            });
            $("#Fecha_Orden").datepicker("setStartDate", '@ViewBag.FechaInicio');
            $("#Fecha_Orden").datepicker("setEndDate", '@ViewBag.FechaFin');

            /**************Acciones Botonera Lateral********************/
            $("body").on("click", "#js_mBuscar", function () {
                buscarCompromisos();
                return false;
            });
            $("body").on("click", "#js_mNuevo", function () {
                getNuevoCompromiso(function () { });
                return false;
            });
            $("body").on("click", "#js_mEditar", function () {
                enableInputs();
                NonEditableInputs();
                createBotonera(["bGuardar", "bCancelar"]);
                $("#Id_TipoCompromiso").attr("disabled", "disabled");
                return false;
            });
            $("body").on("click", "#js_mCancelar", function () {
                getNuevoCompromiso();
                disableInputs();
                recargarMenuLateral(["bNuevo", "bBuscar", "bSalir"]);
                return false;
            });
            $("body").on("click", "#js_mRecibido", function () {
                recibirCompromiso();
                return false;
            });
            $("body").on("click", "#js_mCancelarGral", function () {
                cancelarCompromiso($("#Descripcion_Estatus").val());
                return false;
            });
            $("body").on("click", "#js_mGuardar", function () {
                enableInputs();
                guardarCompromiso();
                return false;
            });
            $("body").on("click", "#js_mDetalles", function () {
                irDetalles();
                return false;
            });
            $("body").on("click", "#js_mSalir", function () {
                if ($("#frmRegresoMaestro").length > 0) {
                    var idTipoCR = parseInt($("#Id_TipoCR").val());
                    switch (idTipoCR) {
                        case 1:
                            $("#frmRegresoMaestro").attr("action", ligaContrarecibos);
                            $("#frmRegresoMaestro").submit();
                            break;
                        case 8:
                            $("#frmRegresoMaestro").attr("action", ligaArrendamientos);
                            $("#frmRegresoMaestro").submit();
                            break;
                        case 9:
                            $("#frmRegresoMaestro").attr("action", ligaHonorarios);
                            $("#frmRegresoMaestro").submit();
                            break;
                        case 10:
                            $("#frmRegresoMaestro").attr("action", ligaCancelacionActivos);
                            $("#frmRegresoMaestro").submit();
                            break;
                        case 11:
                            $("#frmRegresoMaestro").attr("action", ligaHonorariosAsimilables);
                            $("#frmRegresoMaestro").submit();
                            break;
                    }
                } else {
                    GoHome();
                }
            });
            /************************************************************/

            /**************Buscar beneficiario PROVEEDOR*****************/
            buscarBeneficiario("lg");

            seleccionarBeneficiario(["Id_Beneficiario", "Ca_Beneficiarios_NombreCompleto"], "ModalBusBeneficiario", getClasificaBeneficiario, { postId: "", targetSelector: "Id_ClasificaBeneficiario", optionSelected: 1 });

            $("body").on("focusout", "#Id_Beneficiario", function () {
                if ($(this).val().length > 0) {
                    $("#Id_Beneficiario").focusOut({
                        url: "@Url.Action("Beneficiario","FocusOut")",
                        data: { IdBeneficiario: $(this).val() },
                        campos: [{ Base: "NombreCompleto", Campo: "Ca_Beneficiarios_NombreCompleto" }]
                    });
                    ajaxSelect("@Url.Action("getClasificaBeneficiario","Listas")", { beneficiario: $("#Id_Beneficiario").val() }, "POST", true, "Id_ClasificaBeneficiario", 1, callBackLlenarSelectClasificacion);
                }
            });
            /************************************************************/

            /**************Consulta poliza*****************/
            $(".js_ConsultaPoliza").on("click", function () {
                //if (!$(this).isSiblingDisabled()) {
                ConsultaPoliza($(this).data("tipo"), $(this).siblings("input[type=hidden]").val(), $(this).parent().siblings("input[type=hidden]").val());
                //}
            });
            /************************************************************/

            $("body").on("click", "#resultsCompromisos .js_Seleccionar", function () {
                ajaxJson("@Url.Action("OrdenCompraJson","Compromisos")", { TipoCompromiso: $(this).data("tipocompromiso"), FolioCompromiso: $(this).data("foliocompromiso") }, "POST", true, function (response) {
                    if (response.Exito) {
                        cleanInputs();
                        llenarMaestro(response.Data);
                        createBotonera(response.Data.Botonera);
                        if (response.Data.Adquisicion) {
                            $("#Adquisicion").empty();
                            $("#Adquisicion").append("<label>Procede de Adquisiciones</label>");
                        }
                        else
                            $("#Adquisicion").empty();
                        $(".ModalBusCompromisos").modal("hide");
                    }
                    else {
                        ErrorCustom(response.Mensaje);
                    }
                });
                return false;
            });
            $("#Id_TipoCompromiso").on("change", function () {
                ajaxJson("@Url.Action("getPagarseEn","Compromisos")", { tipo: $(this).val() }, "POST", true, function (response) {
                    if (response.Exito)
                        $("#PagarseEn").val(response.Data);
                    else
                        ErrorCustom(response.Mensaje);

                })
            });

            //$('#Id_Beneficiario').typeahead({
            //    source: function (query, process) {
            //        $.ajax({
            //            url: "/Tesoreria/Compromisos/searchBeneficiario",
            //            type: "POST",
            //            data: { name: $("#Id_Beneficiario").val() },
            //            dataType: "JSON",
            //            async: true,
            //            success: function (results) {
            //               // debugger;
            //                $('#Id_Beneficiario').data("datasource", results.Ids);
            //                return process(results.Data);
            //            }
            //        });
            //    }
            //});


            var Url = "/Tesoreria/Compromisos/searchBeneficiario";
            construirCampo("Id_Beneficiario", Url);
            change3("Id_Beneficiario", "Ca_Beneficiarios.NombreCompleto");
            focusOut("Id_Beneficiario");

            //$('#Id_Beneficiario').on('change', chageBeneficiario);



            //$("body").on("change", "#" + Campo, function () {
            //    if ($("#" + Campo).val().split('-').length != 1) {
            //        $("#" + Campo).parent().parent().parent().siblings().find(".js_Descripcion").val($("#" + Campo).val().split('-')[1]);
            //        $("#" + Campo).val($("#" + Campo).val().split('-')[0]);
            //        $("#" + Campo).parent().parent().parent().siblings().find(".js_Descripcion").focus();
            //    } else if ($.inArray($("#" + Campo).val(), $("#" + Campo).data("datasource")) == -1) {
            //        $("#" + Campo).val("");
            //        $("#" + Campo).parent().parent().parent().siblings().find(".js_Descripcion").val("");
            //    }
            //    $("#" + Campo).next;
            //});

            //var chageBeneficiario = function () {
            //    if ($(this).val().split('-').length != 1) {
            //        $(this).val($(this).val().split('-')[1]);
            //        if ($(this).val().length > 0 && $.inArray($(this).val(), $(this).data("dataSource")) == -1) {
            //            ajaxJson("getContribuyenteData", { IdPersona: $(this).val() }, "POST", true, function (response) {
            //                // $('#DomicilioContribuyente').val(response.Domicilio);
            //                $('#Ca_Beneficiarios_NombreCompleto').val(response.Nombre);
            //                $("#Observaciones").focus();
            //            });
            //        }
            //    }
            //}

        });
    </script>
}
